
CREATE TABLE gn_imports.bib_fields (
    id_field integer NOT NULL,
    name_field character varying(100) NOT NULL,
    fr_label character varying(100) NOT NULL,
    eng_label character varying(100),
    type_field character varying(50),
    mandatory boolean NOT NULL,
    autogenerated boolean NOT NULL,
    display boolean NOT NULL,
    mnemonique character varying,
    source_field character varying,
    dest_field character varying,
    multi boolean DEFAULT false NOT NULL,
    id_destination integer NOT NULL,
    mandatory_conditions character varying[],
    optional_conditions character varying[]
);

COMMENT ON COLUMN gn_imports.bib_fields.mandatory_conditions IS 'Contient la liste de champs qui rendent le champ obligatoire.';

COMMENT ON COLUMN gn_imports.bib_fields.optional_conditions IS 'Contient la liste de champs qui rendent le champ optionnel.';

CREATE SEQUENCE gn_imports.dict_fields_id_field_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

ALTER SEQUENCE gn_imports.dict_fields_id_field_seq OWNED BY gn_imports.bib_fields.id_field;

ALTER TABLE gn_imports.bib_fields
    ADD CONSTRAINT mandatory_conditions_field_exists CHECK (gn_imports.isinnamefields((mandatory_conditions)::text[], id_destination)) NOT VALID;

ALTER TABLE gn_imports.bib_fields
    ADD CONSTRAINT optional_conditions_field_exists CHECK (gn_imports.isinnamefields((optional_conditions)::text[], id_destination)) NOT VALID;

ALTER TABLE ONLY gn_imports.bib_fields
    ADD CONSTRAINT pk_dict_fields_id_theme PRIMARY KEY (id_field);

ALTER TABLE ONLY gn_imports.bib_fields
    ADD CONSTRAINT unicity_bib_fields_dest_name_field UNIQUE (id_destination, name_field);

ALTER TABLE ONLY gn_imports.bib_fields
    ADD CONSTRAINT bib_fields_id_destination_fkey FOREIGN KEY (id_destination) REFERENCES gn_imports.bib_destinations(id_destination) ON DELETE CASCADE;

ALTER TABLE ONLY gn_imports.bib_fields

