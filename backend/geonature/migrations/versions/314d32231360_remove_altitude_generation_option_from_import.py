"""remove altitude generation option from import
Revision ID: 314d32231360
Revises: becc3a0c4d90
Create Date: 2025-04-08 11:22:23.342904
"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.schema import Table, MetaData


# revision identifiers, used by Alembic.
revision = "314d32231360"
down_revision = "becc3a0c4d90"
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()
    metadata = MetaData(bind=conn)

    ## REMOVE Synthese - Generate Altitude from bib_fields

    destinations = sa.Table(
        "bib_destinations", metadata, schema="gn_imports", autoload_with=op.get_bind()
    )
    id_destination_synthese = (
        op.get_bind()
        .execute(sa.select(destinations.c.id_destination).where(destinations.c.code == "synthese"))
        .scalar()
    )

    bib_fields = sa.Table("bib_fields", metadata, schema="gn_imports", autoload_with=conn)
    op.get_bind().execute(
        sa.delete(bib_fields)
        .where(bib_fields.c.name_field == "altitudes_generate")
        .where(bib_fields.c.id_destination == id_destination_synthese)
    )

    ## REMOVE Fieldmapping - remove all altitudes_generate entry
    op.execute(
        """
        UPDATE gn_imports.t_fieldmappings tf
        SET values = (
                SELECT to_jsonb(values) - 'altitudes_generate'
            );
        """
    )

    ## REMOVE TImport altitude_autogenerated column
    op.drop_column(
        schema="gn_imports",
        table_name="t_imports",
        column_name="altitude_autogenerated",
    )


def downgrade():
    conn = op.get_bind()
    metadata = MetaData(bind=conn)

    ## RESTORE Synthese - Generate altitude from bib_fields
    destinations = sa.Table(
        "bib_destinations", metadata, schema="gn_imports", autoload_with=op.get_bind()
    )
    id_destination_synthese = (
        op.get_bind()
        .execute(sa.select(destinations.c.id_destination).where(destinations.c.code == "synthese"))
        .scalar()
    )

    bib_fields = sa.Table("bib_fields", metadata, schema="gn_imports", autoload_with=conn)
    op.get_bind().execute(
        sa.insert(bib_fields).values(
            dict(
                name_field="altitudes_generate",
                fr_label="Générer les altitudes manquantes",
                eng_label="",
                type_field=None,
                mandatory=False,
                autogenerated=True,
                display=True,
                mnemonique=None,
                source_field=None,
                dest_field=None,
                multi=False,
                id_destination=id_destination_synthese,
                mandatory_conditions=None,
                optional_conditions=None,
                type_field_params=None,
            )
        )
    )

    ## No need to restore generate_altitudes, it will be handled automatically. The initial version is lost anyway.

    ## Add t_import altitude_autogenerated column
    op.add_column(
        schema="gn_imports",
        table_name="t_imports",
        column=sa.Column("altitude_autogenerated", sa.Boolean, server_default=sa.false()),
    )
