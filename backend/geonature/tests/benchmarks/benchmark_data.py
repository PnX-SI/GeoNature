from geonature.utils.env import db
import pytest
from ref_geo.models import BibAreasTypes, LAreas
from sqlalchemy import select

benchmark_synthese_intersection_data_test_bbox = {
    "modif_since_validation": False,
    "geoIntersection": {
        "type": "Feature",
        "properties": {},
        "geometry": {
            "type": "Polygon",
            "coordinates": [
                [
                    [5.828785, 44.632571],
                    [5.828785, 45.06773],
                    [6.625493, 45.06773],
                    [6.625493, 44.632571],
                    [5.828785, 44.632571],
                ]
            ],
        },
    },
}

benchmark_synthese_intersection_data_test_complex_polygon = {
    "modif_since_validation": False,
    "geoIntersection": {
        "type": "Feature",
        "properties": {},
        "geometry": {
            "type": "Polygon",
            "coordinates": [
                [
                    [6.063715, 44.968659],
                    [5.974429, 44.981293],
                    [5.955198, 44.934631],
                    [5.98256, 44.890826],
                    [6.040252, 44.867462],
                    [6.085582, 44.860646],
                    [6.125418, 44.884012],
                    [6.141901, 44.876225],
                    [6.135038, 44.837262],
                    [6.099322, 44.820697],
                    [6.064979, 44.804128],
                    [6.070473, 44.750493],
                    [6.133664, 44.731947],
                    [6.176247, 44.756341],
                    [6.189983, 44.777799],
                    [6.19273, 44.731947],
                    [6.261412, 44.737803],
                    [6.273775, 44.760243],
                    [6.319105, 44.741706],
                    [6.279269, 44.688002],
                    [6.231192, 44.656741],
                    [6.483941, 44.672375],
                    [6.396028, 44.628395],
                    [6.486688, 44.596121],
                    [6.538887, 44.655764],
                    [6.533392, 44.688981],
                    [6.500425, 44.73877],
                    [6.533392, 44.748528],
                    [6.514161, 44.790467],
                    [6.41938, 44.812887],
                    [6.488062, 44.854779],
                    [6.536139, 44.856727],
                    [6.597938, 44.894757],
                    [6.518262, 44.934648],
                    [6.437214, 44.932702],
                    [6.391881, 44.883076],
                    [6.356164, 44.86068],
                    [6.251768, 44.874311],
                    [6.284735, 44.921996],
                    [6.317703, 44.952143],
                    [6.385011, 44.964781],
                    [6.364406, 44.972557],
                    [6.449572, 44.976444],
                    [6.479792, 44.984218],
                    [6.468803, 45.027928],
                    [6.413857, 45.043461],
                    [6.336928, 45.055017],
                    [6.194069, 45.048223],
                    [6.170716, 44.952049],
                    [6.161099, 44.949131],
                    [6.063715, 44.968659],
                ]
            ],
        },
    },
}


def benchmark_synthese_intersection_data_test_commune():
    return {
        "modif_since_validation": False,
        "area_COM": [
            db.session.scalars(
                select(LAreas).join(BibAreasTypes).where(BibAreasTypes.type_code == "COM").limit(1)
            )
            .one()
            .id_area
        ],
    }


def benchmark_synthese_intersection_data_test_departement():
    return {
        "modif_since_validation": False,
        "area_DEP": [
            db.session.scalars(
                select(LAreas.id_area)
                .join(BibAreasTypes)
                .where(BibAreasTypes.type_code == "DEP")
                .limit(1)
            ).first()
        ],
    }


def benchmark_synthese_intersection_data_test_region():
    return {
        "modif_since_validation": False,
        "area_REG": [
            db.session.scalars(
                select(LAreas.id_area)
                .join(BibAreasTypes)
                .where(BibAreasTypes.type_code == "REG")
                .limit(1)
            ).first()
        ],
    }


benchmark_synthese_with_tree_taxon = {
    "modif_since_validation": False,
    "cd_ref_parent": [
        183787,
        183767,
        183839,
        183840,
        183843,
        183874,
        184358,
        184357,
        184355,
        184354,
        184353,
        184367,
        184376,
        927956,
        200726,
        184350,
        184351,
        184366,
        184363,
        184362,
        184360,
        184359,
        184377,
        184379,
        184374,
        184371,
        184369,
        184368,
        184381,
        184393,
        184391,
        184390,
        184385,
        184387,
        184388,
        184378,
        184438,
        184449,
        184450,
        184493,
        1007942,
        184501,
        184486,
        184488,
        184491,
        184499,
        184492,
        184494,
        200765,
        184737,
        184740,
        184743,
        184752,
        184756,
        184762,
        184766,
        184767,
        184768,
        184771,
        184773,
        184775,
        184776,
        184772,
        184615,
        184616,
        184618,
        184630,
        184643,
        188023,
        200773,
        793340,
        184644,
        184646,
        184649,
        184650,
        184653,
        184658,
        184660,
        184662,
        184666,
        184667,
        184668,
        184670,
        184671,
        184672,
        184674,
        184676,
        184680,
        184682,
        184684,
        184685,
        184689,
        184694,
        184696,
        184699,
        184701,
        184702,
        184703,
        184706,
        184708,
        184709,
        184711,
        184712,
        184714,
        184715,
        184718,
        184720,
        184728,
        184732,
        184734,
        184735,
        184781,
        184791,
        184802,
        184801,
        184890,
        184808,
        184810,
        184815,
        184831,
        184836,
        184838,
        184839,
        184843,
        184847,
        184848,
        184852,
        184853,
        184855,
        184862,
        184865,
        184867,
        184870,
        184872,
        184874,
        184877,
        184879,
        184880,
        184882,
        184883,
        184885,
        184888,
        184889,
        184891,
        184892,
        184894,
        184896,
        184900,
        184907,
        184927,
        184944,
        184947,
        184948,
        184949,
        184950,
        184952,
        839211,
        184961,
        184976,
        185027,
        185028,
        185030,
        185033,
        185043,
        185046,
        185051,
        185064,
        185075,
        185076,
        185077,
        185078,
        185023,
        185081,
        185082,
        185084,
        185085,
        185088,
        185090,
        185124,
        185080,
        185025,
        645275,
        184994,
        834425,
        839203,
        938486,
        184992,
        184988,
        184984,
        184983,
        938483,
        938487,
        185012,
        185204,
        185211,
        188009,
        827922,
        728177,
        187977,
        827924,
        827925,
        714463,
        185129,
        939246,
        185130,
        185131,
        185133,
        185150,
        185157,
        185162,
        185171,
        185188,
        185189,
        185190,
        185193,
        185194,
        185197,
        714275,
        648561,
        610362,
        602182,
        200681,
        185216,
        185220,
        185223,
        185224,
        185226,
        185230,
        185232,
        185234,
        185240,
        185242,
        185244,
        185245,
        185247,
        185249,
        185251,
        185253,
        185254,
        185257,
        185259,
        185263,
        185266,
        185268,
        185270,
        185273,
        185274,
        185276,
        185278,
        185280,
        185285,
        185286,
        185287,
        185290,
        185291,
        185292,
        185297,
        185302,
        185307,
        185308,
        185309,
        185313,
        185322,
        185323,
        185324,
        185327,
        185330,
        714314,
        185334,
        185352,
        185346,
        185347,
        185351,
        185369,
        185372,
        185371,
        185365,
        185364,
        185362,
        185360,
        185359,
        185374,
        185378,
        185388,
        185389,
        185399,
        437022,
        185383,
        185385,
        185468,
        185467,
        185471,
        185472,
        185473,
        185517,
        185566,
        185554,
        185568,
        185557,
        185582,
        185580,
        185578,
        528744,
        185401,
        185590,
        185593,
        185599,
        185596,
        185594,
        185602,
        185604,
        185621,
        185635,
        185652,
        185651,
        185649,
        185669,
        185674,
        186286,
        699191,
        618462,
        186293,
        186292,
        186283,
        185770,
        185781,
        185830,
        185832,
        185896,
        185900,
        185760,
        905695,
        904968,
        827284,
        825345,
        185967,
        185979,
        186008,
        186010,
        186012,
        186000,
        186006,
        185998,
        186058,
        186067,
        186062,
        186076,
        186091,
        186084,
        186094,
        186101,
        885360,
        885396,
        885400,
        885430,
        186121,
        186117,
        186115,
        186110,
        186135,
        186107,
        186108,
        186137,
        186139,
        186141,
        186145,
        186146,
        186148,
        186152,
        186154,
        186158,
        186160,
        186130,
        186129,
        186124,
        186122,
        828783,
        186168,
        186178,
        186176,
        186027,
        186047,
        186021,
        186019,
        186038,
        186025,
        351923,
        186173,
        185985,
        186055,
        186053,
        185990,
        186221,
        186214,
        186223,
        186215,
        186238,
        186237,
        186239,
        699095,
        186245,
        186257,
        186259,
        655502,
        199825,
        443494,
        655482,
        186210,
        186209,
        186211,
        186241,
        186243,
        186242,
        199959,
        444434,
        185954,
        185951,
        185946,
        185960,
        186330,
        933748,
        186337,
        186332,
        186374,
        186376,
        186365,
        186377,
        186346,
        186409,
        186380,
        186383,
        186386,
        186388,
        186390,
        186391,
        186392,
        186393,
        186396,
        186399,
        186400,
        186401,
        186404,
        186406,
        186407,
        186415,
        186418,
        186422,
        186423,
        186425,
        186426,
        186430,
        187541,
        851431,
        851437,
        851464,
        186356,
        810391,
        699677,
        186353,
        186369,
        186997,
    ],
}
