"""Add type sol to occhab

Revision ID: 8a32dfdef27d
Revises: 5fe452b34a79
Create Date: 2025-04-02 10:22:03.398938

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.schema import Table, MetaData
from sqlalchemy.orm.session import Session


# revision identifiers, used by Alembic.
revision = "8a32dfdef27d"
down_revision = "5fe452b34a79"
branch_labels = None
depends_on = ("8eb9a12db289",)


def upgrade():
    metadata = MetaData(bind=op.get_bind())
    session = Session(bind=op.get_bind())

    op.add_column(
        "t_stations",
        sa.Column(
            "id_nomenclature_type_sol",
            sa.Integer(),
            sa.ForeignKey("ref_nomenclatures.t_nomenclatures.id_nomenclature"),
            nullable=True,
        ),
        schema="pr_occhab",
    )

    op.add_column(
        "t_imports_occhab",
        sa.Column(
            "src_id_nomenclature_type_sol",
            sa.String,
            nullable=True,
        ),
        schema="gn_imports",
    )

    op.add_column(
        "t_imports_occhab",
        sa.Column(
            "id_nomenclature_type_sol",
            sa.Integer(),
            sa.ForeignKey("ref_nomenclatures.t_nomenclatures.id_nomenclature"),
            nullable=True,
        ),
        schema="gn_imports",
    )

    field = sa.Table("bib_fields", metadata, schema="gn_imports", autoload=True)
    cor_entity_field = sa.Table("cor_entity_field", metadata, schema="gn_imports", autoload=True)
    destination = sa.Table("bib_destinations", metadata, schema="gn_imports", autoload=True)
    theme = sa.Table("bib_themes", metadata, schema="gn_imports", autoload=True)
    entity = sa.Table("bib_entities", metadata, schema="gn_imports", autoload=True)

    id_dest_occhab = session.scalar(
        sa.select(destination.c.id_destination).where(destination.c.code == "occhab")
    )

    id_theme = session.scalar(
        sa.select(theme.c.id_theme).where(theme.c.name_theme == "general_info")
    )
    id_entity = session.scalar(sa.select(entity.c.id_entity).where(entity.c.code == "station"))

    id_field = (
        op.get_bind()
        .execute(
            sa.insert(field)
            .values(
                id_destination=id_dest_occhab,
                name_field="id_nomenclature_type_sol",
                fr_label="Type de sol",
                mandatory=False,
                autogenerated=False,
                display=True,
                mnemonique="TYPE_SOL",
                source_field="src_id_nomenclature_type_sol",
                dest_field="id_nomenclature_type_sol",
            )
            .returning(field.c.id_field)
        )
        .first()[0]
    )

    op.execute(
        sa.insert(cor_entity_field).values(
            id_field=id_field,
            id_entity=id_entity,
            id_theme=id_theme,
            order_field=16,
            comment="Correspondance champs standard: TypeSol",
        )
    )


def downgrade():
    metadata = MetaData(bind=op.get_bind())
    session = Session(bind=op.get_bind())

    field = sa.Table("bib_fields", metadata, schema="gn_imports", autoload=True)
    cor_entity_field = sa.Table("cor_entity_field", metadata, schema="gn_imports", autoload=True)

    id_field = session.scalar(
        sa.select(field.c.id_field).where(field.c.name_field == "id_nomenclature_type_sol")
    )

    op.execute(sa.delete(cor_entity_field).where(cor_entity_field.c.id_field == id_field))
    op.execute(sa.delete(field).where(field.c.name_field == "id_nomenclature_type_sol"))

    op.drop_column(
        schema="pr_occhab",
        table_name="t_stations",
        column_name="id_nomenclature_type_sol",
    )
    op.drop_column(
        schema="gn_imports",
        table_name="t_imports_occhab",
        column_name="src_id_nomenclature_type_sol",
    )
    op.drop_column(
        schema="gn_imports",
        table_name="t_imports_occhab",
        column_name="id_nomenclature_type_sol",
    )
